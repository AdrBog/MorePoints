export const RULES = {
  "c": {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/("(.*?)"|'(.*?)')/gm,replaceTo:"<SPAN CLASS='mini-code-editor-brown-imp'>$&</SPAN>"},{regex:/&lt;(.*?)&gt;/gm,replaceTo:"<SPAN CLASS='mini-code-editor-brown-imp'>$&</SPAN>"},{regex:/((?:\/\*(?:[^*]|(?:\*+[^*\/]))*\*+\/)|(?:\/\/.*))/,replaceTo:"<SPAN CLASS='mini-code-editor-green-imp'>$&</SPAN>"},{regex:/(?:\#.*)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-purple'>$&</SPAN>"},{regex:/([a-zA-Z_{1}][a-zA-Z0-9_]+)(?= *\()/gm,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b((?!-0?(\.0+)?(e|$))-?(0|[1-9]\d*)?(\.\d+)?(?<=\d)(e-?(0|[1-9]\d*))?|0x[0-9a-f]+)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/\b(char|int|short|long|double|float|void)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(unsigned|signed)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(register|static|extern)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(do|while|for|break|continue)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(return)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(if|else|switch|case|default)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(goto)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(struct)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(enum)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]"],shortcuts:[{keyword:"def",left:"#define "},{keyword:"enum",left:"enum ",right:" {\n\t\n};"},{keyword:"main",left:"#include <stdio.h>\n\nint main(int argc, char *argv[])\n{\n\t",right:"\n\treturn 0;\n}"},{keyword:"if",left:"if (",right:") {\n\t\n}"},{keyword:"ife",left:"if (",right:") {\n\t\n} else {\n\t\n}"},{keyword:"ifel",left:"if (",right:") {\n\t\n} else if () {\n\t\n} else {\n\t\n}"},{keyword:"inc",left:"#include "},{keyword:"for",left:"for (int i = 0; i <= 10; i++) {\n\t",right:"\n}"},{keyword:"pf",left:'printf("',right:'\\n");'},{keyword:"struct",left:"struct ",right:" {\n\t\n};"},{keyword:"sw",left:"switch (",right:") {\n\tcase 1:\n\t\tbreak;\n\tdefault:\n\t\t\n}"}]},
  "css" : {highlights:[{regex:";",replaceTo:"&semi;"},{regex:":",replaceTo:"&colon;"},{regex:/&(?!(semi;|colon;))/gm,replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/((?:\/\*(?:[^*]|(?:\*+[^*\/]))*\*+\/))/,replaceTo:"<SPAN CLASS='mini-code-editor-green-imp'>$&</SPAN>"},{regex:/(?<=\&colon;)(.*?)(?=\&semi;)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/([^{}&;]+)(?=&colon;)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/(\s|^)(.*?)\s*(?={)/g,replaceTo:"<SPAN CLASS='mini-code-editor-brown'>$&</SPAN>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]"],shortcuts:[{keyword:"body",left:"body {\n\tmargin: 40px auto;\n\tmax-width: 650px;\n\tline-height: 1.6;\n\tfont-size: 18px;\n\tpadding: 0 10px;\n}",right:""},{keyword:"*",left:"* {\n\tbox-sizing: border-box;\n}",right:""}]},
  "html" : {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/("(.*?)"|'(.*?)')/gm,replaceTo:"<SPAN CLASS='mini-code-editor-brown'>$&</SPAN>"},{regex:/(?<=\&lt;(?!\!--))(.*?)(?=\&gt;)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/(\w*) *&equals; *((['"])?((\\\3|[^\3])*?)\3|(\w+))/gm,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/&lt;!--[^>]*--&gt;/gm,replaceTo:"<SPAN CLASS='mini-code-editor-green'>$&</SPAN>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","`":"`","[":"]","<":">"},backspace_pairs:['""',"''","()","{}","[]","<>"],newline_pairs:["()","{}","[]","``","><"],shortcuts:[{keyword:"a",left:'<a href="',right:'"></a>'},{keyword:"dialog",left:'<dialog id="dialog">\n\t',right:'\n\t<button onclick="dialog.close()">Close</button>\n</dialog>'},{keyword:"form",left:"<form action='' method=''>\n\t",right:"\n</form>"},{keyword:"h1",left:"<h1>",right:"</h1>"},{keyword:"h2",left:"<h2>",right:"</h2>"},{keyword:"h3",left:"<h3>",right:"</h3>"},{keyword:"h4",left:"<h4>",right:"</h4>"},{keyword:"h5",left:"<h5>",right:"</h5>"},{keyword:"h6",left:"<h6>",right:"</h6>"},{keyword:"html",left:"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Document</title>\n\t</head>\n\t<body>\n\t\t",right:"\n\t</body>\n</html>"},{keyword:"if",left:'<iframe src="',right:'">'},{keyword:"img",left:'<img src="',right:'" alt="">'},{keyword:"in",left:'<input type="text" name="',right:'">'},{keyword:"ine",left:'<input type="email" name="',right:'">'},{keyword:"inp",left:'<input type="password" name="',right:'">'},{keyword:"label",left:'<label for="',right:'"></label>'},{keyword:"p",left:"<p>\n\t",right:"\n</p>"},{keyword:"script",left:"<script>\n\t",right:"\n<\/script>"},{keyword:"style",left:"<style>\n\t",right:"\n</style>"}]},
  "js" : {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/("(.*?)"|'(.*?)'|`(.*?)`)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-brown-imp'>$&</SPAN>"},{regex:/((?:\/\*(?:[^*]|(?:\*+[^*\/]))*\*+\/)|(?:\/\/.*))/,replaceTo:"<SPAN CLASS='mini-code-editor-green-imp'>$&</SPAN>"},{regex:/([a-zA-Z_{1}][a-zA-Z0-9_]+)(?= *\()/gm,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b((?!-0?(\.0+)?(e|$))-?(0|[1-9]\d*)?(\.\d+)?(?<=\d)(e-?(0|[1-9]\d*))?|0x[0-9a-f]+)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/\b(NaN|undefined|null)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(function|return)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(async|await|then)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(try|catch|throw|finally)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(class|this|constructor|extends|super|static)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(if|else|switch|case|default)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(do|while|for|of|in|until|break|continue)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(let|const|new|var|typeof)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(true|false)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","`":"`","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]","``"],shortcuts:[{keyword:"afun",left:"async function ",right:"()\n{\n\t\n}"},{keyword:"ca",left:"case ",right:":\n\t\n\tbreak;"},{keyword:"cl",left:'console.log("',right:'")'},{keyword:"cls",left:"class ",right:"\n{\n\t\n}"},{keyword:"con",left:"constructor()\n{\n\t",right:"\n}"},{keyword:"if",left:"if (",right:") {\n\t\n}"},{keyword:"ife",left:"if (",right:") {\n\t\n} else {\n\t\n}"},{keyword:"ifel",left:"if (",right:") {\n\t\n} else if () {\n\t\n} else {\n\t\n}"},{keyword:"for",left:"for (int i = 0; i <= 10; i++) {\n\t",right:"\n}"},{keyword:"fun",left:"function ",right:"()\n{\n\t\n}"},{keyword:"getid",left:'document.getElementById("',right:'")'},{keyword:"sw",left:"switch (",right:") {\n\tcase 1:\n\t\tbreak;\n\tdefault:\n\t\t\n}"}]},
  "python" : {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:'"',replaceTo:"&quot;"},{regex:"'",replaceTo:"&apos;"},{regex:/(&quot;&quot;&quot;[\s\S]*?&quot;&quot;&quot;|&apos;&apos;&apos;[\s\S]*?&apos;&apos;&apos;)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-brown-imp'>$&</SPAN>"},{regex:/(?:\#.*)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-green-imp'>$&</SPAN>"},{regex:/(&quot;(.*?)&quot|&apos;(.*?)&apos);/gm,replaceTo:"<SPAN CLASS='mini-code-editor-brown-imp'>$&</SPAN>"},{regex:/([a-zA-Z_{1}][a-zA-Z0-9_]+)(?= *\()/gm,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b((?!-0?(\.0+)?(e|$))-?(0|[1-9]\d*)?(\.\d+)?(?<=\d)(e-?(0|[1-9]\d*))?|0x[0-9a-f]+)\b/gi,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/\b(def|return)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(if|elif|else)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(try|except|finally|raise)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(str|int|float|complex|list|tuple|range|dict|set|frozenset|bool|bytes|bytearray|memoryview|None)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(global)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(for|in|while|pass|break|continue)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(class|self)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(lambda)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(del)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(from|import|as)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(True|False)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]","``"],shortcuts:[{keyword:"def",left:"def ",right:"():\n\t"},{keyword:"if",left:"if ",right:":\n\t"},{keyword:"ife",left:"if ",right:":\n\t\nelse:\n\t"},{keyword:"ifel",left:"if ",right:":\n\t\nelif :\n\t\nelse:\n\t"}]},
  "shell" : {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/("(.*?)"|'(.*?)')/gm,replaceTo:"<SPAN class='mini-code-editor-green-imp'>$&</SPAN>"},{regex:/(?:\#.*)/gm,replaceTo:"<SPAN class='mini-code-editor-brown-imp'>$&</SPAN>"},{regex:/([a-zA-Z_$][a-zA-Z_$0-9]*(?=&equals;))/g,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/(\$[a-zA-Z_$][a-zA-Z_$0-9]*)/g,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/(\$\(.*\))/g,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/(`.*`)/g,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/(\$\{.*\})/g,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/([a-zA-Z_{1}][a-zA-Z0-9_]+)(?= *\()/gm,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(for|do|done)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(while|until)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(continue|break)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(select)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(function)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(case|in|esac)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(if|elif|else|then|fi)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]"],shortcuts:[{keyword:"bash",left:"#!/usr/bin/env bash\n"},{keyword:"elif",left:"elif [ ",right:" ]; then\n\t"},{keyword:"for",left:"for (( ",right:" ;  ;  )); do\n\t\ndone"},{keyword:"fun",left:"function ",right:"(){\n\t\n}"},{keyword:"fundoc",left:"#===  FUNCTION  ==========================================\n#         NAME:  ",right:"\n#  DESCRIPTION:  \n#========================================================="},{keyword:"fori",left:"for ",right:" in  ; do\n\t\ndone"},{keyword:"if",left:"if [ ",right:" ]; then\n\t\nfi"},{keyword:"ife",left:"if [ ",right:" ]; then\n\t\nelse\n\t\nfi"},{keyword:"ifel",left:"if [ ",right:" ]; then\n\t\nelif [  ]; then\n\t\nelse\n\t\nfi"},{keyword:"man",left:"#================================================================\n# HEADER\n#================================================================\n#% SYNOPSIS\n#+    ",right:"\n#%    \n#% DESCRIPTION\n#%    \n#%    \n#%    \n#% OPTIONS\n#%    \n#%    \n#%    \n#%    \n#%    \n#% EXAMPLES\n#%    \n#%    \n#%    \n#================================================================\n#- IMPLEMENTATION\n#-    version         \n#-    author          \n#-    copyright       Copyright (c) \n#-    license         GNU General Public License\n#================================================================"},{keyword:"sh",left:"#!/usr/bin/env sh\n"},{keyword:"case",left:"case $",right:" in\n\t\nesac"},{keyword:"until",left:"until [ ",right:" ]; do\n\t\ndone"},{keyword:"while",left:"while [ ",right:" ]; do\n\t\ndone"}]},
  "sqlite" : {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/("(.*?)"|'(.*?)')/gm,replaceTo:"<SPAN class='mini-code-editor-green-imp'>$&</SPAN>"},{regex:/((?:\/\*(?:[^*]|(?:\*+[^*\/]))*\*+\/)|(?:\-\-.*))/,replaceTo:"<SPAN class='mini-code-editor-red-imp'>$&</SPAN>"},{regex:/\b(add|ADD)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(alter|ALTER)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(autoincrement|AUTOINCREMENT)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(create|CREATE)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(column|COLUMN)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(drop|DROP)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(foreign|FOREIGN)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(from|FROM)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(insert|INSERT)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(into|INTO)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(key|KEY)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(not|NOT)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(null|NULL)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(primary|PRIMARY)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(references|REFERENCES)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(rename|RENAME)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(select|SELECT)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(table|TABLE)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(to|TO)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(values|VALUES)\b/gi,replaceTo:"<SPAN class='mini-code-editor-blue'>$&</SPAN>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]"],shortcuts:[{keyword:"cr",left:"CREATE TABLE ",right:"(\n\tID INTEGER PRIMARY KEY AUTOINCREMENT,\n\t\n)"},{keyword:"ins",left:"INSERT INTO ",right:"() VALUES (\n\t\n) "},{keyword:"sel",left:"SELECT ",right:" FROM "}]},
  "plain-text": {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","`":"`","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]"],shortcuts:[]}
}
