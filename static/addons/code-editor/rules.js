export const RULES = {
  "css" : {highlights:[{regex:";",replaceTo:"&semi;"},{regex:":",replaceTo:"&colon;"},{regex:/&(?!(semi;|colon;))/gm,replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/((?:\/\*(?:[^*]|(?:\*+[^*\/]))*\*+\/))/,replaceTo:"<SPAN CLASS='mini-code-editor-green-imp'>$&</SPAN>"},{regex:/(?<=\&colon;)(.*?)(?=\&semi;)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/([^{}&;]+)(?=&colon;)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/(\s|^)(.*?)\s*(?={)/g,replaceTo:"<SPAN CLASS='mini-code-editor-brown'>$&</SPAN>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]"],shortcuts:[{keyword:"body",left:"body {\n	margin: 40px auto;\n	max-width: 650px;\n	line-height: 1.6;\n	font-size: 18px;\n	padding: 0 10px;\n}",right:""},{keyword:"*",left:"* {\n	box-sizing: border-box;\n}",right:""},]},
  "html" : {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/("(.*?)"|'(.*?)')/gm,replaceTo:"<SPAN CLASS='mini-code-editor-brown'>$&</SPAN>"},{regex:/(?<=\&lt;(?!\!--))(.*?)(?=\&gt;)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/(\w*) *&equals; *((['"])?((\\\3|[^\3])*?)\3|(\w+))/gm,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/&lt;!--[^>]*--&gt;/gm,replaceTo:"<SPAN CLASS='mini-code-editor-green'>$&</SPAN>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","`":"`","[":"]","<":">"},backspace_pairs:['""',"''","()","{}","[]","<>"],newline_pairs:["()","{}","[]","``","><"],shortcuts:[{keyword:"a",left:'<a href="',right:'"></a>'},{keyword:"dialog",left:'<dialog id="dialog">\n	',right:'\n	<button onclick="dialog.close()">Close</button>\n</dialog>'},{keyword:"form",left:"<form action='' method=''>\n	",right:"\n</form>"},{keyword:"html",left:"<!DOCTYPE html>\n<html>\n	<head>\n		<title>Document</title>\n	</head>\n	<body>\n		",right:"\n	</body>\n</html>"},{keyword:"if",left:'<iframe src="',right:'">'},{keyword:"img",left:'<img src="',right:'" alt="">'},{keyword:"in",left:'<input type="text" name="',right:'">'},{keyword:"ine",left:'<input type="email" name="',right:'">'},{keyword:"inp",left:'<input type="password" name="',right:'">'},{keyword:"label",left:'<label for="',right:'"></label>'},{keyword:"p",left:"<p>\n	",right:"\n</p>"},{keyword:"script",left:"<script>\n	",right:"\n</script>"},{keyword:"style",left:"<style>\n	",right:"\n</style>"}]},
  "js" : {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/("(.*?)"|'(.*?)')/gm,replaceTo:"<SPAN CLASS='mini-code-editor-brown-imp'>$&</SPAN>"},{regex:/((?:\/\*(?:[^*]|(?:\*+[^*\/]))*\*+\/)|(?:\/\/.*))/,replaceTo:"<SPAN CLASS='mini-code-editor-green-imp'>$&</SPAN>"},{regex:/([a-zA-Z_{1}][a-zA-Z0-9_]+)(?= *\()/gm,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b((?!-0?(\.0+)?(e|$))-?(0|[1-9]\d*)?(\.\d+)?(?<=\d)(e-?(0|[1-9]\d*))?|0x[0-9a-f]+)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/\b(NaN|undefined|null)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(function|return)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(async|await|then)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(try|catch|throw|finally)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(class|this|constructor|extends|super|static)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(if|else|switch|case|default)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(do|while|for|of|in|until|break|continue)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(let|const|new|var|typeof)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b(true|false)\b/g,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","`":"`","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]","``"],shortcuts:[{keyword:"afun",left:"async function ",right:"()\n{\n	\n}"},{keyword:"ca",left:"case ",right:":\n	\n	break;"},{keyword:"cl",left:'console.log("',right:'")'},{keyword:"cls",left:"class ",right:"\n{\n	\n}"},{keyword:"con",left:"constructor()\n{\n	",right:"\n}"},{keyword:"if",left:"if (",right:") {\n	\n}"},{keyword:"ife",left:"if (",right:") {\n	\n} else {\n	\n}"},{keyword:"ifel",left:"if (",right:") {\n	\n} else if () {\n	\n} else {\n	\n}"},{keyword:"for",left:"for (int i = 0; i <= 10; i++)\n{\n	",right:"\n}"},{keyword:"fun",left:"function ",right:"()\n{\n	\n}"},{keyword:"getid",left:'document.getElementById("',right:'")'},{keyword:"sw",left:"switch (",right:") {\n	case 1:\n		break;\n	default:\n		\n}"},]},
  "python" : {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:'"',replaceTo:"&quot;"},{regex:"'",replaceTo:"&apos;"},{regex:/(&quot;&quot;&quot;[\s\S]*?&quot;&quot;&quot;|&apos;&apos;&apos;[\s\S]*?&apos;&apos;&apos;)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-brown-imp'>$&</SPAN>"},{regex:/(?:\#.*)/gm,replaceTo:"<SPAN CLASS='mini-code-editor-green-imp'>$&</SPAN>"},{regex:/(&quot;(.*?)&quot|&apos;(.*?)&apos);/gm,replaceTo:"<SPAN CLASS='mini-code-editor-brown-imp'>$&</SPAN>"},{regex:/([a-zA-Z_{1}][a-zA-Z0-9_]+)(?= *\()/gm,replaceTo:"<SPAN CLASS='mini-code-editor-blue'>$&</SPAN>"},{regex:/\b((?!-0?(\.0+)?(e|$))-?(0|[1-9]\d*)?(\.\d+)?(?<=\d)(e-?(0|[1-9]\d*))?|0x[0-9a-f]+)\b/ig,replaceTo:"<SPAN CLASS='mini-code-editor-red'>$&</SPAN>"},{regex:/\b(def|return)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(if|elif|else)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(try|except|finally|raise)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(str|int|float|complex|list|tuple|range|dict|set|frozenset|bool|bytes|bytearray|memoryview|None)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(global)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(for|in|while|pass|break|continue)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(class|self)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(lambda)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(del)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(from|import|as)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\b(True|False)\b/g,replaceTo:"<b CLASS='mini-code-editor-blue'>$&</b>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]","``"],shortcuts:[{keyword:"def",left:"def ",right:"():\n	"},{keyword:"if",left:"if ",right:":\n	"},{keyword:"ife",left:"if ",right:":\n	\nelse:\n	"},{keyword:"ifel",left:"if ",right:":\n	\nelif :\n	\nelse:\n	"}]},
  "sqlite" : {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/("(.*?)"|'(.*?)')/gm,replaceTo:"<font class='mini-code-editor-green-imp'>$&</font>"},{regex:/((?:\/\*(?:[^*]|(?:\*+[^*\/]))*\*+\/)|(?:\-\-.*))/,replaceTo:"<font class='mini-code-editor-red-imp'>$&</font>"},{regex:/\b(add|ADD)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(alter|ALTER)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(autoincrement|AUTOINCREMENT)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(create|CREATE)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(column|COLUMN)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(drop|DROP)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(foreign|FOREIGN)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(from|FROM)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(insert|INSERT)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(into|INTO)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(key|KEY)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(not|NOT)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(null|NULL)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(primary|PRIMARY)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(references|REFERENCES)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(rename|RENAME)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(select|SELECT)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(table|TABLE)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(to|TO)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\b(values|VALUES)\b/ig,replaceTo:"<font class='mini-code-editor-blue'>$&</font>"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]"],shortcuts:[{keyword:"cr",left:"CREATE TABLE ",right:"(\n	ID INTEGER PRIMARY KEY AUTOINCREMENT,\n	\n)"},{keyword:"ins",left:"INSERT INTO ",right:"() VALUES (\n	\n) "},{keyword:"sel",left:"SELECT ",right:" FROM "}]},
  "plain-text": {highlights:[{regex:"&",replaceTo:"&amp;"},{regex:"<",replaceTo:"&lt;"},{regex:">",replaceTo:"&gt;"},{regex:"=",replaceTo:"&equals;"},{regex:/\n$/g,replaceTo:"\n\n"}],character_pairs:{"(":")",'"':'"',"'":"'","{":"}","`":"`","[":"]"},backspace_pairs:['""',"''","()","{}","[]"],newline_pairs:["()","{}","[]"],shortcuts:[]}
}
